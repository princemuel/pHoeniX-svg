---
import { tv } from "tailwind-variants";

import type { HTMLTag, Polymorphic } from "astro/types";
import type { VariantProps } from "tailwind-variants";

type Props<Tag extends HTMLTag> = VariantProps<typeof text> & Polymorphic<{ as: Tag }>;

const text = tv({
  base: "",
  variants: {
    color: {
      primary: "text-gray-600 dark:text-white",
      secondary: "text-gray-800 dark:text-white",
    },
    size: {
      sm: "text-sm",
      md: "text-base",
      lg: "text-2xl",
      xl: "text-4xl",
    },
    weight: {
      sm: "font-normal",
      md: "font-bold",
      lg: "font-extrabold",
    },
  },
  compoundVariants: [
    {
      size: ["sm", "md"],
      class: "px-3 py-1",
    },
  ],
  defaultVariants: {
    size: "md",
    weight: "sm",
    color: "primary",
  },
});

const { as, class: className, size, color, weight, ...rest } = Astro.props;

const As = as || "p";
---

<As {...rest} class:list={text({ size, color, weight, class: className })}>
  <slot />
</As>
