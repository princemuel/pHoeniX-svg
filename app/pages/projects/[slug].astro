---
import Container from "@/components/atoms/container.astro";
import MainContent from "@/components/atoms/main.astro";
import Markdown from "@/components/atoms/markdown.astro";
import RootLayout from "@/layouts/root.astro";

import { getCollection, getEntry, render } from "astro:content";

import type { GetStaticPaths } from "astro";

export const getStaticPaths = (async () => {
  const entries = await getCollection(
    "projects",
    ({ data }) => !(import.meta.env.PROD && data.draft),
  );

  return entries.map((entry) => ({
    props: { entry },
    params: { slug: entry.id },
  }));
}) satisfies GetStaticPaths;

const { entry } = Astro.props;

const [markdown] = await Promise.all([render(entry), getEntry(entry.data.author)]);

const { Content, remarkPluginFrontmatter } = markdown;

// update the collection schema with plugin data
entry.data.updatedAt = new Date(remarkPluginFrontmatter.updatedAt);
entry.data.duration = remarkPluginFrontmatter.duration;
entry.data.words = remarkPluginFrontmatter.words;

const { title, description } = entry.data;

Astro.response.headers.set("netlify-cache-tag", entry.id);
---

<RootLayout title={[title, true]} description={description}>
  <Fragment slot="head"> </Fragment>
  <Container class="mt-12">
    <div class="grid grid-cols-1 gap-4 md:gap-6 lg:grid-cols-[5rem,1fr] lg:gap-12">
      <MainContent class="flex flex-col gap-3 lg:col-start-2">
        <h1 id="headline" class="text-5xl font-extrabold text-gray-800">{title}</h1>
        <Markdown>
          <Content />
        </Markdown>
      </MainContent>
    </div>
  </Container>
</RootLayout>
