---
import { getCollection, getEntry, render } from "astro:content";
import Link from "@/components/atoms/link.astro";
import Prose from "@/components/atoms/prose.astro";
import RootLayout from "@/layouts/root.astro";
import type { GetStaticPaths } from "astro";

export const getStaticPaths = (async ({ paginate }) => {
  const entries = await getCollection(
    "projects",
    ({ data }) => !(import.meta.env.PROD && data.draft),
  );

  return paginate(entries, { pageSize: 1 });
}) satisfies GetStaticPaths;

const { page } = Astro.props;

const entry = page.data.at(0);
if (!entry) return Astro.rewrite("/404");

const [markdown, _author] = await Promise.all([
  render(entry),
  getEntry(entry.data.author),
]);

const { Content, remarkPluginFrontmatter } = markdown || {};

// update the collection schema with plugin data
entry.data.updatedAt ||= new Date(remarkPluginFrontmatter.updatedAt);
entry.data.duration ||= remarkPluginFrontmatter.duration;
entry.data.words ||= remarkPluginFrontmatter.words;
---

<RootLayout title={[""]} description="">
  <Prose>
    <h1 id="headline">{entry.data.title}</h1>
    <Content />
  </Prose>

  <div class="flex items-center gap-4">
    {page.url.prev ? <Link href={page.url.prev}>Previous</Link> : null}
    {page.url.next ? <Link href={page.url.next}>Next</Link> : null}
  </div>
</RootLayout>
